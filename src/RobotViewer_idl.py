# Python stubs generated by omniidl from RobotViewer.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "RobotViewer"
#
__name__ = "RobotViewer"
_0_RobotViewer = omniORB.openModule("RobotViewer", r"RobotViewer.idl")
_0_RobotViewer__POA = omniORB.openModule("RobotViewer__POA", r"RobotViewer.idl")


# interface Request
_0_RobotViewer._d_Request = (omniORB.tcInternal.tv_objref, "IDL:RobotViewer/Request:1.0", "Request")
omniORB.typeMapping["IDL:RobotViewer/Request:1.0"] = _0_RobotViewer._d_Request
_0_RobotViewer.Request = omniORB.newEmptyClass()
class Request :
    _NP_RepositoryId = _0_RobotViewer._d_Request[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RobotViewer.Request = Request
_0_RobotViewer._tc_Request = omniORB.tcInternal.createTypeCode(_0_RobotViewer._d_Request)
omniORB.registerType(Request._NP_RepositoryId, _0_RobotViewer._d_Request, _0_RobotViewer._tc_Request)

# Request operations and attributes
Request._d_req = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# Request object reference
class _objref_Request (CORBA.Object):
    _NP_RepositoryId = Request._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def req(self, *args):
        return _omnipy.invoke(self, "req", _0_RobotViewer.Request._d_req, args)

    __methods__ = ["req"] + CORBA.Object.__methods__

omniORB.registerObjref(Request._NP_RepositoryId, _objref_Request)
_0_RobotViewer._objref_Request = _objref_Request
del Request, _objref_Request

# Request skeleton
__name__ = "RobotViewer__POA"
class Request (PortableServer.Servant):
    _NP_RepositoryId = _0_RobotViewer.Request._NP_RepositoryId


    _omni_op_d = {"req": _0_RobotViewer.Request._d_req}

Request._omni_skeleton = Request
_0_RobotViewer__POA.Request = Request
omniORB.registerSkeleton(Request._NP_RepositoryId, Request)
del Request
__name__ = "RobotViewer"

#
# End of module "RobotViewer"
#
__name__ = "RobotViewer_idl"

_exported_modules = ( "RobotViewer", )

# The end.
