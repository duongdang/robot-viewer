#! /usr/bin/env python
import sys,imp, os
from optparse import OptionParser
import logging
import robotviewer
import robotviewer.displayserver_corba
import robotviewer.displayserver_xmlrpc

logger = logging.getLogger()
logger.setLevel(logging.DEBUG)

ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
# create formatter and add it to the handlers
#formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
formatter = logging.Formatter("%(name)s:%(levelname)s:%(message)s")
ch.setFormatter(formatter)
# add the handlers to the logger
logger.addHandler(ch)

def main():
    """
    """
    global app
    # os.system("source $ROBOTPKG_BASE/OpenHRP/bin/unix/config.sh")
    parser = OptionParser()
    parser.add_option("-v", "--verbose",
                      action="store_true", dest="verbose", default=False,
                      help="be verbose")

    parser.add_option("-s","--server", dest="server", default = "CORBA",
                      help="server type to be used (default: CORBA)")

    parser.add_option("-c","--config-file", dest="config_file",
                      help="specify config file")

    parser.add_option("--no-cache",
                      action="store_true", dest="no_cache", default=False,
                      help="force parsing robots' kinematics file")

    parser.add_option("--skeleton",
                      action="store_true", dest="skeleton", default=False,
                      help="only display robot skeletons")

    (options, args) = parser.parse_args()

    if options.server == "CORBA":
        logger.info("Starting robotviewer in corba mode")
        DisplayServer = robotviewer.displayserver_corba.DisplayServerCorba
    elif options.server == "XML-RPC":
        logger.info("Starting robotviewer in xmlrpc mode")
        DisplayServer = robotviewer.displayserver_xmlrpc.DisplayServerXmlrpc
    else:
        raise Exception ("Not supported server type %s"%options.server)
    server = DisplayServer(options,args)
    server.run()

if __name__ == '__main__':
    main()
