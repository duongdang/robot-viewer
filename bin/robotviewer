#! /usr/bin/env python
import sys,imp, os, stat
from optparse import OptionParser
import logging
import robotviewer
logger = logging.getLogger()
logger.setLevel(logging.DEBUG)
__version__ = robotviewer.__version__
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
# create formatter and add it to the handlers
#formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
formatter = logging.Formatter("%(name)s:%(levelname)s:%(message)s")
ch.setFormatter(formatter)
# add the handlers to the logger
logger.addHandler(ch)

config_file = os.path.join(os.environ['HOME'],'/.robotviewer/config')
def main():
    """
    """
    global app
    # os.system("source $ROBOTPKG_BASE/OpenHRP/bin/unix/config.sh")
    parser = OptionParser()
    parser.add_option("-v", "--verbose",
                      action="store_true", dest="verbose", default=False,
                      help="be verbose")

    parser.add_option("-s","--server", dest="server", default = "CORBA",
                      help="server type to be used (default: CORBA)")

    parser.add_option("-c","--config-file", dest="config_file",
                      help="specify config file")

    parser.add_option("--no-cache",
                      action="store_true", dest="no_cache", default=False,
                      help="force parsing robots' kinematics file")

    parser.add_option("--skeleton",
                      action="store_true", dest="skeleton", default=False,
                      help="only display robot skeletons")

    parser.add_option("--strict",
                      action="store_true", dest="strict", default=False,
                      help="kill OpenGL on exception (might be caused by client).")

    parser.add_option("--version",
                      action="store_true", dest="version", default=False,
                      help="Print version and exit")

    # parser.add_option("--off-screen",
    #                   action="store_true", dest="off_screen", default=False,
    #                   help="offscreen mode")

    parser.add_option("-r", "--refresh-rate",
                      action="store", dest="refresh_rate", type = "int", default = 1000,
                      help="specify refresh rate")

    (options, args) = parser.parse_args()
    global ch
    if options.version:
        print __version__
        sys.exit(0)

    os.chmod(os.path.join(os.environ['HOME'], ".robotviewer"),
             stat.S_IWUSR | stat.S_IRUSR | stat.S_IXUSR)

    if options.verbose:
        ch.setLevel(logging.DEBUG)

    if options.server == "CORBA":
        logger.info("Starting robotviewer in corba mode")
        import robotviewer.displayserver_corba
        DisplayServer = robotviewer.displayserver_corba.DisplayServerCorba
    elif options.server == "XML-RPC":
        logger.info("Starting robotviewer in xmlrpc mode")
        import robotviewer.displayserver_xmlrpc
        logger.debug("Imported displayserver_xmlrpc")
        DisplayServer = robotviewer.displayserver_xmlrpc.DisplayServerXmlrpc
    else:
        raise Exception ("Not supported server type %s"%options.server)
    server = DisplayServer(options,args)
    logger.debug("created server")
    server.run()

if __name__ == '__main__':
    main()
